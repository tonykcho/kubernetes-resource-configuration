apiVersion: v1
kind: PersistentVolume
metadata:
  name: redis-pv
spec:
  volumeMode: Filesystem
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  storageClassName: "redis"
  hostPath:
    path: "/Users/tony/Desktop/PersistentVolume/redis"

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
spec:
  storageClassName: "redis"
  resources:
    requests:
      storage: 2Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-deployment
spec:
  selector:
    matchLabels:
      app: redis-app
  template:
    metadata:
      labels:
        app: redis-app
    spec:
      containers:
        - name: redis-app
          image: redis
          # resources:
          #   limits:
          #     memory: "128Mi"
          #     cpu: "500m"
          ports:
          - containerPort: 6379
          # save a snapshot of the DB every 60 seconds if at least 50 write operation was performed
          args: ["--appendonly", "yes", "--save", "60", "50"]
          volumeMounts:
            - mountPath: /data
              name: redis-volume
      volumes:
        - name: redis-volume
          persistentVolumeClaim:
            claimName: redis-pvc

---

apiVersion: v1
kind: Service
metadata:
  name: redis-cluster
spec:
  selector:
    app: redis-app
  ports:
  - port: 6379
    targetPort: 6379

# Create configmap from json file
# kubectl create configmap <configmap_name> --from-file <json_file>
